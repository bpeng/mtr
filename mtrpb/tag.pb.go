// Code generated by protoc-gen-go.
// source: tag.proto
// DO NOT EDIT!

package mtrpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag struct {
	Tag string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type TagResult struct {
	Result []*Tag `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *TagResult) Reset()                    { *m = TagResult{} }
func (m *TagResult) String() string            { return proto.CompactTextString(m) }
func (*TagResult) ProtoMessage()               {}
func (*TagResult) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *TagResult) GetResult() []*Tag {
	if m != nil {
		return m.Result
	}
	return nil
}

type TagSearchResult struct {
	FieldMetric      []*FieldMetricSummary `protobuf:"bytes,1,rep,name=field_metric" json:"field_metric,omitempty"`
	DataLatency      []*DataLatencySummary `protobuf:"bytes,2,rep,name=data_latency" json:"data_latency,omitempty"`
	FieldState       []*FieldState         `protobuf:"bytes,3,rep,name=field_state" json:"field_state,omitempty"`
	DataCompleteness []*DataCompleteness   `protobuf:"bytes,4,rep,name=data_completeness" json:"data_completeness,omitempty"`
}

func (m *TagSearchResult) Reset()                    { *m = TagSearchResult{} }
func (m *TagSearchResult) String() string            { return proto.CompactTextString(m) }
func (*TagSearchResult) ProtoMessage()               {}
func (*TagSearchResult) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *TagSearchResult) GetFieldMetric() []*FieldMetricSummary {
	if m != nil {
		return m.FieldMetric
	}
	return nil
}

func (m *TagSearchResult) GetDataLatency() []*DataLatencySummary {
	if m != nil {
		return m.DataLatency
	}
	return nil
}

func (m *TagSearchResult) GetFieldState() []*FieldState {
	if m != nil {
		return m.FieldState
	}
	return nil
}

func (m *TagSearchResult) GetDataCompleteness() []*DataCompleteness {
	if m != nil {
		return m.DataCompleteness
	}
	return nil
}

func init() {
	proto.RegisterType((*Tag)(nil), "mtrpb.Tag")
	proto.RegisterType((*TagResult)(nil), "mtrpb.TagResult")
	proto.RegisterType((*TagSearchResult)(nil), "mtrpb.TagSearchResult")
}

var fileDescriptor3 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x15, 0x02, 0x45, 0xb9, 0x20, 0xa1, 0x7a, 0xc1, 0x64, 0x42, 0x19, 0xa0, 0x53, 0x90,
	0xca, 0x1b, 0x00, 0x62, 0x82, 0x85, 0x30, 0xb1, 0x44, 0xae, 0x6b, 0x4a, 0x25, 0x9b, 0x44, 0xf6,
	0x75, 0xc8, 0x53, 0xf2, 0x4a, 0x9c, 0xcf, 0x41, 0x4a, 0xa7, 0x24, 0xf7, 0xfd, 0xdf, 0x1f, 0xfb,
	0xa0, 0x40, 0xb5, 0x6b, 0x06, 0xdf, 0x63, 0x2f, 0xce, 0x1c, 0xfa, 0x61, 0x53, 0xc1, 0x56, 0xa1,
	0x4a, 0xa3, 0xaa, 0xfc, 0xda, 0x1b, 0xbb, 0x4d, 0x1f, 0xb5, 0x80, 0xfc, 0x43, 0xed, 0x44, 0x09,
	0x39, 0x39, 0x32, 0xbb, 0xc9, 0x56, 0x45, 0x7d, 0x07, 0x05, 0xcd, 0xde, 0x4d, 0x38, 0x58, 0x14,
	0x15, 0x2c, 0x3c, 0xbf, 0x11, 0xcc, 0x57, 0xe5, 0x1a, 0x1a, 0x6e, 0x6c, 0x28, 0x51, 0xff, 0x66,
	0x70, 0x49, 0xcf, 0xd6, 0x28, 0xaf, 0xbf, 0xa7, 0xfc, 0x3d, 0x5c, 0x70, 0x7f, 0xe7, 0x0c, 0xfa,
	0xbd, 0x9e, 0xac, 0xeb, 0xc9, 0x7a, 0x89, 0xe8, 0x8d, 0x49, 0x7b, 0x70, 0x4e, 0xf9, 0x31, 0x0a,
	0xf1, 0x70, 0x9d, 0x55, 0x68, 0x7e, 0xf4, 0x28, 0x4f, 0x8e, 0x84, 0x67, 0x42, 0xaf, 0x89, 0xfc,
	0x0b, 0xb7, 0x90, 0x6e, 0xd0, 0x05, 0x24, 0x20, 0x73, 0xce, 0x2f, 0xe7, 0x3f, 0x68, 0x23, 0x10,
	0x6b, 0x58, 0x72, 0xb1, 0xee, 0xdd, 0x60, 0x0d, 0x55, 0x98, 0x10, 0xe4, 0x29, 0xa7, 0xaf, 0x66,
	0xed, 0x4f, 0x33, 0xfc, 0x78, 0xfe, 0x99, 0x16, 0xb6, 0x59, 0xf0, 0x7a, 0x1e, 0xfe, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x84, 0x70, 0x37, 0x19, 0x4b, 0x01, 0x00, 0x00,
}
