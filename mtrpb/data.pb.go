// Code generated by protoc-gen-go.
// source: data.proto
// DO NOT EDIT!

package mtrpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DataLatencySummary is a summary of data latency metrics for each site.
// mean should not be 0.  fifty and ninety may be unknown (0).
// If upper == lower == 0 then no threshold has been set on the metric.
type DataLatencySummary struct {
	// The siteID for the metric e.g., TAUP
	SiteID string `protobuf:"bytes,1,opt,name=site_iD,json=siteID" json:"site_iD,omitempty"`
	// The typeID for the metric e.g., latency.strong
	TypeID string `protobuf:"bytes,2,opt,name=type_iD,json=typeID" json:"type_iD,omitempty"`
	// Unix time in seconds for the metric value (don't need nanos).
	Seconds int64 `protobuf:"varint,3,opt,name=seconds" json:"seconds,omitempty"`
	// The mean latency
	Mean int32 `protobuf:"varint,4,opt,name=mean" json:"mean,omitempty"`
	// The fiftieth percentile value.  Might be unknown (0)
	Fifty int32 `protobuf:"varint,5,opt,name=fifty" json:"fifty,omitempty"`
	// The ninetieth percentile value.  Might be unknown (0)
	Ninety int32 `protobuf:"varint,6,opt,name=ninety" json:"ninety,omitempty"`
	// The upper threshold for the metric to be good.
	Upper int32 `protobuf:"varint,7,opt,name=upper" json:"upper,omitempty"`
	// The lower threshold for the metric to be good.
	Lower int32 `protobuf:"varint,8,opt,name=lower" json:"lower,omitempty"`
}

func (m *DataLatencySummary) Reset()                    { *m = DataLatencySummary{} }
func (m *DataLatencySummary) String() string            { return proto.CompactTextString(m) }
func (*DataLatencySummary) ProtoMessage()               {}
func (*DataLatencySummary) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type DataLatencySummaryResult struct {
	Result []*DataLatencySummary `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *DataLatencySummaryResult) Reset()                    { *m = DataLatencySummaryResult{} }
func (m *DataLatencySummaryResult) String() string            { return proto.CompactTextString(m) }
func (*DataLatencySummaryResult) ProtoMessage()               {}
func (*DataLatencySummaryResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DataLatencySummaryResult) GetResult() []*DataLatencySummary {
	if m != nil {
		return m.Result
	}
	return nil
}

type DataSite struct {
	// The siteID for the metric e.g., TAUP
	SiteID string `protobuf:"bytes,1,opt,name=site_iD,json=siteID" json:"site_iD,omitempty"`
	// The site latitude - not usually accurate enough for meta data
	Latitude float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	// The site longitude - not usually accurate enough for meta data
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *DataSite) Reset()                    { *m = DataSite{} }
func (m *DataSite) String() string            { return proto.CompactTextString(m) }
func (*DataSite) ProtoMessage()               {}
func (*DataSite) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type DataSiteResult struct {
	Result []*DataSite `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *DataSiteResult) Reset()                    { *m = DataSiteResult{} }
func (m *DataSiteResult) String() string            { return proto.CompactTextString(m) }
func (*DataSiteResult) ProtoMessage()               {}
func (*DataSiteResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *DataSiteResult) GetResult() []*DataSite {
	if m != nil {
		return m.Result
	}
	return nil
}

type DataLatencyTag struct {
	// The siteID for the latency e.g., TAUP
	SiteID string `protobuf:"bytes,1,opt,name=site_iD,json=siteID" json:"site_iD,omitempty"`
	// The typeID for the latency e.g., latency.gnss.1hz
	TypeID string `protobuf:"bytes,2,opt,name=type_iD,json=typeID" json:"type_iD,omitempty"`
	// The tag for the latency e.g., TAUP
	Tag string `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
}

func (m *DataLatencyTag) Reset()                    { *m = DataLatencyTag{} }
func (m *DataLatencyTag) String() string            { return proto.CompactTextString(m) }
func (*DataLatencyTag) ProtoMessage()               {}
func (*DataLatencyTag) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type DataLatencyTagResult struct {
	Result []*DataLatencyTag `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *DataLatencyTagResult) Reset()                    { *m = DataLatencyTagResult{} }
func (m *DataLatencyTagResult) String() string            { return proto.CompactTextString(m) }
func (*DataLatencyTagResult) ProtoMessage()               {}
func (*DataLatencyTagResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DataLatencyTagResult) GetResult() []*DataLatencyTag {
	if m != nil {
		return m.Result
	}
	return nil
}

type DataLatencyThreshold struct {
	// The siteID for the latency e.g., TAUP
	SiteID string `protobuf:"bytes,1,opt,name=site_iD,json=siteID" json:"site_iD,omitempty"`
	// The typeID for the latency e.g., latency.gnss.1hz
	TypeID string `protobuf:"bytes,2,opt,name=type_iD,json=typeID" json:"type_iD,omitempty"`
	// The lower threshold for the latency to be good.
	Lower int32 `protobuf:"varint,3,opt,name=lower" json:"lower,omitempty"`
	// The upper threshold for the latency to be good.
	Upper int32 `protobuf:"varint,4,opt,name=upper" json:"upper,omitempty"`
}

func (m *DataLatencyThreshold) Reset()                    { *m = DataLatencyThreshold{} }
func (m *DataLatencyThreshold) String() string            { return proto.CompactTextString(m) }
func (*DataLatencyThreshold) ProtoMessage()               {}
func (*DataLatencyThreshold) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type DataLatencyThresholdResult struct {
	Result []*DataLatencyThreshold `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *DataLatencyThresholdResult) Reset()                    { *m = DataLatencyThresholdResult{} }
func (m *DataLatencyThresholdResult) String() string            { return proto.CompactTextString(m) }
func (*DataLatencyThresholdResult) ProtoMessage()               {}
func (*DataLatencyThresholdResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *DataLatencyThresholdResult) GetResult() []*DataLatencyThreshold {
	if m != nil {
		return m.Result
	}
	return nil
}

type DataType struct {
	// The TypeID in the table data.type
	TypeID string `protobuf:"bytes,1,opt,name=type_iD,json=typeID" json:"type_iD,omitempty"`
}

func (m *DataType) Reset()                    { *m = DataType{} }
func (m *DataType) String() string            { return proto.CompactTextString(m) }
func (*DataType) ProtoMessage()               {}
func (*DataType) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type DataTypeResult struct {
	Result []*DataType `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *DataTypeResult) Reset()                    { *m = DataTypeResult{} }
func (m *DataTypeResult) String() string            { return proto.CompactTextString(m) }
func (*DataTypeResult) ProtoMessage()               {}
func (*DataTypeResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *DataTypeResult) GetResult() []*DataType {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*DataLatencySummary)(nil), "mtrpb.DataLatencySummary")
	proto.RegisterType((*DataLatencySummaryResult)(nil), "mtrpb.DataLatencySummaryResult")
	proto.RegisterType((*DataSite)(nil), "mtrpb.DataSite")
	proto.RegisterType((*DataSiteResult)(nil), "mtrpb.DataSiteResult")
	proto.RegisterType((*DataLatencyTag)(nil), "mtrpb.DataLatencyTag")
	proto.RegisterType((*DataLatencyTagResult)(nil), "mtrpb.DataLatencyTagResult")
	proto.RegisterType((*DataLatencyThreshold)(nil), "mtrpb.DataLatencyThreshold")
	proto.RegisterType((*DataLatencyThresholdResult)(nil), "mtrpb.DataLatencyThresholdResult")
	proto.RegisterType((*DataType)(nil), "mtrpb.DataType")
	proto.RegisterType((*DataTypeResult)(nil), "mtrpb.DataTypeResult")
}

var fileDescriptor1 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x53, 0x4d, 0x4b, 0xeb, 0x40,
	0x14, 0x25, 0x2f, 0x4d, 0xda, 0xde, 0x07, 0xef, 0xc9, 0x50, 0x75, 0xac, 0x2e, 0x24, 0x2e, 0xec,
	0xc6, 0x82, 0x76, 0xe5, 0x56, 0xea, 0x42, 0xd0, 0x85, 0x69, 0x57, 0x82, 0xc8, 0xb4, 0x99, 0xb6,
	0x81, 0x7c, 0x91, 0x4e, 0x90, 0xfc, 0x49, 0x7f, 0x93, 0x33, 0x77, 0x26, 0x6d, 0xfa, 0x21, 0x48,
	0x77, 0x73, 0xce, 0xb9, 0x77, 0x72, 0xce, 0xbd, 0x19, 0x80, 0x80, 0x09, 0xd6, 0xcf, 0xf2, 0x54,
	0xa4, 0xc4, 0x89, 0x45, 0x9e, 0x4d, 0xbc, 0x2f, 0x0b, 0xc8, 0x50, 0xb2, 0xcf, 0x4c, 0xf0, 0x64,
	0x5a, 0x8e, 0x8a, 0x38, 0x66, 0x79, 0x49, 0x4e, 0xa1, 0xb9, 0x0c, 0x05, 0xff, 0x08, 0x87, 0xd4,
	0xba, 0xb4, 0x7a, 0x6d, 0xdf, 0x55, 0xf0, 0x69, 0xa8, 0x04, 0x51, 0x66, 0x28, 0xfc, 0xd1, 0x82,
	0x82, 0x52, 0xa0, 0xb2, 0x83, 0x4f, 0xd3, 0x24, 0x58, 0x52, 0x5b, 0x0a, 0xb6, 0x5f, 0x41, 0x42,
	0xa0, 0x11, 0x73, 0x96, 0xd0, 0x86, 0xa4, 0x1d, 0x1f, 0xcf, 0xa4, 0x03, 0xce, 0x2c, 0x9c, 0x89,
	0x92, 0x3a, 0x48, 0x6a, 0x40, 0x4e, 0xc0, 0x4d, 0xc2, 0x84, 0x4b, 0xda, 0x45, 0xda, 0x20, 0x55,
	0x5d, 0x64, 0x19, 0xcf, 0x69, 0x53, 0x57, 0x23, 0x50, 0x6c, 0x94, 0x7e, 0x4a, 0xb6, 0xa5, 0x59,
	0x04, 0xde, 0x0b, 0xd0, 0xdd, 0x3c, 0x3e, 0x5f, 0x16, 0x91, 0x20, 0xb7, 0xe0, 0xe6, 0x78, 0x92,
	0xa1, 0xec, 0xde, 0xdf, 0xbb, 0xb3, 0x3e, 0x0e, 0xa1, 0xbf, 0xa7, 0xc1, 0x14, 0x7a, 0xef, 0xd0,
	0x52, 0xea, 0x48, 0xa6, 0xff, 0x79, 0x28, 0x5d, 0x68, 0x45, 0x4c, 0x84, 0xa2, 0x08, 0x38, 0x4e,
	0xc5, 0xf2, 0x57, 0x98, 0x5c, 0x40, 0x3b, 0x4a, 0x93, 0xb9, 0x16, 0x6d, 0x14, 0xd7, 0x84, 0x77,
	0x0f, 0xff, 0xaa, 0xeb, 0x8d, 0xc7, 0xeb, 0x2d, 0x8f, 0xff, 0x6b, 0x1e, 0xb1, 0xac, 0x72, 0x36,
	0xd6, 0xad, 0xc6, 0xf7, 0x98, 0xcd, 0x0f, 0x58, 0xda, 0x11, 0xd8, 0x82, 0xcd, 0xd1, 0x56, 0xdb,
	0x57, 0x47, 0xef, 0x11, 0x3a, 0x9b, 0xb7, 0x1a, 0x5b, 0x37, 0x5b, 0xb6, 0x8e, 0x77, 0x47, 0xa7,
	0x8a, 0x2b, 0x73, 0x62, 0xf3, 0x9a, 0x85, 0xa4, 0x17, 0x69, 0x14, 0x1c, 0x60, 0x71, 0xb5, 0x65,
	0xbb, 0xb6, 0xe5, 0xf5, 0x1f, 0xd1, 0xa8, 0xfd, 0x11, 0xde, 0x2b, 0x74, 0xf7, 0x7d, 0xd5, 0x44,
	0x18, 0x6c, 0x45, 0x38, 0xdf, 0x13, 0x61, 0xd5, 0x52, 0x05, 0xb9, 0xd2, 0xfb, 0x1f, 0x4b, 0x33,
	0x75, 0x8f, 0x56, 0xdd, 0x63, 0xb5, 0x45, 0x55, 0xf4, 0x8b, 0x2d, 0x62, 0x99, 0x91, 0x1f, 0x9a,
	0x6f, 0xfa, 0x21, 0x4e, 0x5c, 0x7c, 0x96, 0x83, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x1e,
	0xa1, 0x68, 0xa4, 0x03, 0x00, 0x00,
}
